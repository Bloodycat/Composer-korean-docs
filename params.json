{"name":"Composer-korean-docs","tagline":"Composer 의 한글 메뉴얼입니다.","body":"# Composer 한국어 메뉴얼\r\nComposer를 설정하고 이용하는 방법에 대한 한국어 메뉴얼을 제공합니다. \r\n\r\n## Composer?\r\ncomposer 는 php 를 개발하는데 있어서 패키지간의 의존성을 관리하는 의존성 관리자입니다. \r\nnode.js 의 npm, ruby 의 bundle과 같은 역활을 수행합니다. \r\n\r\nphp를 개발하는데 있어서 다양한 패키지들을 설치하고 의존성을 관리하며 Autoload를 사용하는데 Composer가 꼭 필요하다고 할 수 있습니다.\r\n\r\nPHP 5.3.2+ 이상이면 Composer가 구동될 수 있습니다.\r\n\r\n## 패키지의 검색\r\n\r\ncomposer 를 통해서 설치할 수 있는 수많은 패키지들을 손쉽게 검색하는 방법은 [packagist](https://packagist.org/)를 이용하는 방법입니다. 이곳에서 키워드나 패키지명, 벤더의 이름을 기반으로 검색하여 원하는 패키지를 손쉽게 찾을 수 있습니다. \r\n\r\n## 한국어 문서의 번역 \r\n\r\nComposer의 한글 메뉴얼은 많은 분들의 공헌으로 진행되었습니다. [공헌자 확인하기](https://docs.google.com/spreadsheets/d/1rBZkP0BzDsH415rRRvbZLl13wyhBa_3H1833iRnfEWI/edit#gid=0) 오타나 수정사항에 대해서는 [@findstar](findstar@xpressengine.com) 에게 연락하시거나 [github](https://github.com/xpressengine/Composer-korean-docs/tree/master/) 에서 Pull Request 를 보내주시면 검토후 반영됩니다. \r\n\r\n\r\n## 목차 \r\n\r\n### 메뉴얼\r\n\r\n* 00 - [소개하기](https://github.com/xpressengine/Composer-korean-docs/blob/master/KR/00-intro.md)\r\n\r\n* 01 - [기본 사용법](https://github.com/xpressengine/Composer-korean-docs/blob/master/KR/01-basic-usage.md)\r\n\r\n* 02 - [라이브러리](https://github.com/xpressengine/Composer-korean-docs/blob/master/KR/02-libraries.md)\r\n\r\n* 03 - [커맨드라인 인터페이스 / 명령어](https://github.com/xpressengine/Composer-korean-docs/blob/master/KR/03-cli.md)\r\n\r\n* 04 - [composer.json의 구조](https://github.com/xpressengine/Composer-korean-docs/blob/master/KR/04-schema.md)\r\n\r\n* 05 - [Repositories - 저장소](https://github.com/xpressengine/Composer-korean-docs/blob/master/KR/05-repositories.md)\r\n\r\n* 06 - [커뮤니티](https://github.com/xpressengine/Composer-korean-docs/blob/master/KR/05-repositories.md)\r\n\r\n### 기타 항목\r\n\r\n* [Aliases-별칭](https://github.com/xpressengine/Composer-korean-docs/blob/master/KR/articles/aliases.md)\r\n: 버전과 브랜치 네임의 별칭을 구성하는 법 \r\n\r\n* [커스텀 인스톨러](https://github.com/xpressengine/Composer-korean-docs/blob/master/KR/articles/custom-installers.md)\r\n: 패키지의 특정한 유형의 설치 방법을 수정하기\r\n\r\n* [Satis 또는 Toran 프록시를 통해서 전용 패키지를 구성하는법](https://github.com/xpressengine/Composer-korean-docs/blob/master/KR/articles/handling-private-packages-with-satis.md)\r\n: 고유한 자신의 컴포저 저장소를 운영하는 방법\r\n\r\n* [HTTP 기본 인증 사용법](https://github.com/xpressengine/Composer-korean-docs/blob/master/KR/articles/http-basic-authentication.md)\r\n: private 호스트에 위치한 패키지에 엑세스 하는 방법\r\n\r\n* [플러그인을 설정하고 사용하는 방법](https://github.com/xpressengine/Composer-korean-docs/blob/master/KR/articles/plugins.md)\r\n: 컴포저의 기능을 확장하고 수정하는 방법\r\n\r\n* [스크립트](https://github.com/xpressengine/Composer-korean-docs/blob/master/KR/articles/scripts.md)\r\n: 패키지를 설치한 전후에 호출되는 스크립트 콜백\r\n\r\n* [트러블 슈팅](https://github.com/xpressengine/Composer-korean-docs/blob/master/KR/articles/troubleshooting.md)\r\n: 문제점 해결\r\n\r\n* [벤더 바이너리와 `vendor/bin` 디렉토리](https://github.com/xpressengine/Composer-korean-docs/blob/master/KR/articles/vendor-binaries.md)\r\n: 패키지의 커맨드라인 스크립트를 확인하는 방법 \r\n\r\n\r\n한글 메뉴얼에 대한 전체 자료는 [Github](https://github.com/xpressengine/Composer-korean-docs/tree/master) 에서 확인 하실 수 있습니다.\r\n\r\n### API\r\n\r\nAPI 문서는 [이곳](https://getcomposer.org/apidoc/master/index.html)에서 확인하실 수 있습니다.\r\n\r\n## 지원\r\n\r\nComposer 한국어 메뉴얼은 [Naver D2](http://developer.naver.com/wiki/pages/techSupport) 와 [Xpressengine](https://xpressengine.com) 개발팀의 지원하에 진행되었습니다. \r\n\r\n## 라이센스\r\n\r\nComposer와 한국어 메뉴얼은 [MIT 라이센스](https://github.com/composer/composer/blob/master/LICENSE)를 따릅니다.  \r\n","google":"UA-46389165-6","note":"Don't delete this file! It's used internally to help with page regeneration."}